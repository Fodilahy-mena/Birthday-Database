body {
	padding-inline-start: 4rem;
	padding-inline-end: 4rem;
	background-color: #fef6e4;
}

body > header > div { 
	display: flex;
	margin-bottom: 2rem;
	margin-top: 2rem;
	
}
h1 {
	margin: 0;
	text-transform: uppercase;
	font-size: 50px;
	color: #FF2D95;
	text-shadow: 0 1px #808d93, -1px 0 #cdd2d5, -1px 2px #808d93, -2px 1px #cdd2d5, -2px 3px #808d93, -3px 2px #cdd2d5, -3px 4px #808d93, -4px 3px #cdd2d5, -4px 5px #808d93, -5px 4px #cdd2d5, -5px 6px #808d93, -6px 5px #cdd2d5, -6px 7px #808d93, -7px 6px #cdd2d5, -7px 8px #808d93, -8px 7px #cdd2d5;
	
}
.add {
	background-color: #ffd803;
	color: #272343;
}
.table-responsive {
	background-color: #55423d;
	background-repeat: no-repeat;
	background-size: cover;
}
th img {
	width: 100px;
	border-radius: 50%;
}


.table td, .table th {
    padding: .75rem;
    vertical-align: middle;
    border-top: none;
}
thead {
	color: white;
}

button {
    border: none;
    background-color: transparent;
}

.even {
	background-color: #fffffe;
	color: blue;
}

.birthday {
	animation: mymove 5s infinite;
	background-color: #fffffe;
	color: black;
}


@keyframes mymove {
	from {background-color: red;}
	to {background-color: blue;}
  }
.odds {
	color: white;
	background-color: skyblue;
}
/* 

if (birthday === 0) {
                let bListEl = document.querySelector(`[data-id= "${person.id}"]`);
                bListEl.classList.remove('even');
                bListEl.classList.remove('odds');
                bListEl.classList.add('birthday');
                console.log(bListEl);
              }*/
tr {
	margin-top: 1rem;
	margin-bottom: 1rem;
}

/* popup */

.popup {
	/* background: hsla(0, 0%, 30%, 0.5); */
	animation: bgmove 5s infinite;
	background: rgb(107,6,107);
	/* background: linear-gradient(90deg, hsla(0, 0%, 55%, 0.5) 0%, hsla(133, 97%, 49%, 0.5) 14%, hsla(244, 95%, 49%, 0.5) 27%, hsla(0, 0%, 98%, 0.5) 51%, hsla(303, 97%, 50%, 0.5) 75%, hsla(130, 97%, 49%, 0.5) 91%, hsla(0, 95%, 50%, 0.5) 100%); */
	position: fixed;
	/* transition: all; */
	height: 100vh;
	width: 100vw;
	transition: all 0.25s;
	top: 0;
	display: grid;
	justify-content: center;
	align-items: center;
	pointer-events: none;
	opacity: 0;
	left: 0;
}

@keyframes bgmove {
	/* from {background: linear-gradient(90deg, hsla(0, 0%, 55%, 0.5) 0%, hsla(133, 97%, 49%, 0.5) 14%, hsla(244, 95%, 49%, 0.5) 27%, hsla(0, 0%, 98%, 0.5) 51%, hsla(303, 97%, 50%, 0.5) 75%, hsla(130, 97%, 49%, 0.5) 91%, hsla(0, 95%, 50%, 0.5) 100%);} */
	/* to {background: hsla(310, 96%, 50%, 0.5);} */
	0%     {background-color: hsla(0, 89%, 49%, 0.5);}
	10.0% {background-color: hsla(0, 9%, 98%, 0.5);}
	25.0% {background-color: hsla(54, 94%, 50%, 0.5);}
	35.0% {background-color: hsla(113, 98%, 51%, 0.5);}
	50.0%  {background: linear-gradient(90deg, hsla(0, 0%, 55%, 0.5) 0%, hsla(133, 97%, 49%, 0.5) 14%, hsla(244, 95%, 49%, 0.5) 27%, hsla(0, 0%, 98%, 0.5) 51%, hsla(303, 97%, 50%, 0.5) 75%, hsla(130, 97%, 49%, 0.5) 91%, hsla(0, 95%, 50%, 0.5) 100%);}
	75.0%  {background-color: hsla(244, 89%, 49%, 0.5);}
	85.0% {background-color: hsla(0, 100%, 3%, 0.5);}
    100.0%  {background: hsla(310, 96%, 50%, 0.5);}
  }

.popup fieldset {
	padding: 2rem;
	border: 2px solid whitesmoke;
	background-color: white;
	border-radius: 5px;
	transition: all 0.2s;
	box-shadow: 0px 0px 0 #899CD5, 1px 1px 0 #c4d1fa, 2px 2px 0 #f14be9, 3px 3px 0 #6F82BB;
}

.popup.open {
	opacity: 1;
	pointer-events: all;
}
.options-btn {
	display: flex;
}

.popup button {
	background-color: blue;
	position:relative;
	background-image: linear-gradient(bottom, rgb(70, 71, 68) 0%, rgb(58, 58, 58) 100%);
	box-shadow: inset 0px 1px 0px #404140, 0px 6px 0px #4d4e4d;
	color: white;
	padding: 14px 20px;
	margin: 8px 0;
	border: none;
	cursor: pointer;
	width: 100%;
	border-radius: 5px;
	opacity: 0.9;
	margin: 1rem;

}


.popup button:active {
	top:7px;
	background-image: linear-gradient(bottom, rgb(52, 53, 51) 100%, rgb(74, 75, 74) 0%);
	box-shadow: inset 0px 1px 0px #404140, inset 0px -1px 0px #4d4e4c;
	color: #156785;
	text-shadow: 0px 1px 1px rgba(255,255,255,0.3);
	background: rgb(44,160,202);
}
.popup button:nth-of-type(1) {
	margin-left: 0;
}

.popup button:nth-of-type(2) {
	margin-right: 0;
}
.popup button:hover {
	background-color: red;
}

fieldset {
	display: flex;
}

input {
	padding: 8px;
	border: 1px solid brown;
	font-size: 16px;
	color: gray;
	border-radius: 5px;
}
.popup strong {
	font-size: 20px;
	font-weight: 700;
	color: goldenrod;
}

.btn-primary, .search, .select,.reset-filters {
	margin-block-end: 1rem;
}
.search, .select, .reset-filters {
	margin-left: 1rem;
}

.select {
	display: inline-block;
    width: auto;
    vertical-align: middle;
}

/* // save to local storage

    // update the local storage when there is any change
    function updateToLocalStorage() {
        // const save = people;
        localStorage.setItem('people', JSON.stringify(people));
    }

    function saveToLocalStorage() {
        const saveBirtdayList = JSON.parse(localStorage.getItem('people'));
        if(saveBirtdayList) {
            people = saveBirtdayList;
            displayList(people);
        }
        tr.dispatchEvent(new CustomEvent('updatePeopleList'));
    }
    
    }
    tr.addEventListener('updatePeopleList', saveToLocalStorage);
    updateToLocalStorage();

     */
/* deletePersonBirthday.splice();
				localStorage.setItem('people',JSON.stringify(deletePersonBirthday)); */
				/* // save to local storage
 function initLocalStorage() {
    const saveBirtdayList = JSON.parse(localStorage.getItem('persons'));
    if(saveBirtdayList) {
        persons = saveBirtdayList;
    }
    tbody.dispatchEvent(new CustomEvent('updatePeopleList'));
}
//update the local storage when there is any change
function updateToLocalStorage() {
    localStorage.setItem('persons', JSON.stringify(persons));
}
tbody.addEventListener('updatePeopleList', updateToLocalStorage);
initLocalStorage(); */


/* Js draft */

/* 
let birthdates = [
                new Date(timestamp_to_date.getFullYear(),timestamp_to_date.getMonth(),timestamp_to_date.getDate()), 
                new Date(today.getFullYear(),today.getMonth(),today.getDate())];


            birthdates.sort(function(firstDate,secondDate){

                //calculate the difference between first date and current date
                let firstDifference = new Date() - firstDate;
            
                //calculate difference between second date and current date.
               let secondDifference = new Date() - secondDate;
            
                //return the smallest value.
                return firstDifference - secondDifference;
            
            });
            console.log(`${person.lastName}`,birthdates);
            let dateOfBirth = `${timestamp_to_date.getFullYear()}
            /${timestamp_to_date.getMonth()}
            /${timestamp_to_date.getDate()}`;

            console.log('Date of birth', dateOfBirth);

            let dayOfBirth = dateOfBirth.split("/");
            let currentYear = new Date().getFullYear();
            let birthdayDate = new Date(currentYear, dayOfBirth[0] - 1, dayOfBirth[1])
            let now = new Date().valueOf();
            if (birthdayDate.valueOf() < now){ 
                birthdayDate.setFullYear(currentYear+1)
            }
            person.fromNow = birthdayDate.valueOf() - now;
            let ageNow = new Date(5283584266189);
            console.log("nowage", today.getFullYear() - ageNow.getFullYear());
            console.log(`${person.firstName}`,person.fromNow);
*/

/*        // Search input
const searchInput = document.querySelector('.search');
console.log(searchInput);

const showPeople = () => {
let inputValue = searchInput.value;
let inputValueLowerCase = inputValue.toLowerCase();

let filteredFirstName = persons.filter(person =>  
    person.firstName.toLowerCase().includes(inputValueLowerCase)
);

let htmlFilter = displayList(filteredFirstName);
tbody.innerHTML = htmlFilter;
console.log(htmlFilter);
}
searchInput.addEventListener('keyup', showPeople);

// const filterList = e => {
//     showPeople(e, searchInput.value);
// };
// searchInput.addEventListener('keyup', filterList);

// const showPeople = (e, filterFirstName) => {
//     let sortedPeople = persons.sort(function(a, b) {return b.birthday - a.birthday;});

//     if(filterFirstName) {
//         sortedPeople = sortedPeople.filter(person => {
//             let lowerCaseFirstName = person.firstName.toLowerCase();
//             let lowerCaseFilter = filterFirstName.toLowerCase();

//             if(lowerCaseFirstName.includes(lowerCaseFilter)) {
//                 console.log(sortedPeople);
//                 return true;
//             } else {
//                 return false;
//             }
//         });
//     }
// }

 */